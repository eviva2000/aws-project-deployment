{"version":3,"sources":["assets/logo2.png","assets/av3.png","components/Nav.js","sections/LandingPage.js","sections/Login.js","sections/Signup.js","sections/Profile.js","sections/Inventory.js","components/ProtectedRout.js","sections/HomeProfile.js","sections/ResetPassword.js","sections/ScreenForResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","userData","isAuth","onAuth","console","log","handleLogout","a","localStorage","removeItem","axios","get","className","id","src","Logo","alt","firstname","to","onClick","LandingPage","useState","txtSearch","setTxtSearch","notFoundMessage","setNotFoundMessage","searchResultDisplay","setSearchResultDisplay","addresses","setAddresses","API_URL","searchInput","searchByCity","options","crossDomain","method","headers","fetch","fetchCity","json","result","length","autoComplete","style","cursor","type","name","placeholder","onChange","event","target","value","onBlur","autoFocus","display","map","address","key","_id","city","postalcode","Login","errorMessage","setErrorMessage","setUserData","useForm","register","handleSubmit","errors","history","useHistory","from","useLocation","state","pathname","loginHandler","formData","credentials","body","JSON","stringify","Accept","res","data","status","response","setItem","push","message","color","onSubmit","ref","required","pattern","email","password","Signup","signupHandler","minLength","lastname","repeatPassword","Profile","displayUpdateMessage","setDisplayUpdateMessage","displayUpdateBtn","setDisplayUpdateBtn","deleteMessage","setDeleteMessage","form","setForm","handleChange","input","handleUpdate","updatedData","put","showUpdateModal","handleDelete","delete","marginLeft","Avatar2","marginTop","defaultValue","marginRight","Inventory","API_KEY","process","homes","setHomes","useEffect","api_call","fetchAllHomes","homeLink","home","width","height","backgroundImage","image","backgroundPosition","backgroundSize","justifyContent","alignItems","padding","price","beds","bath","area","paddingLeft","street","defaults","withCredentials","PrivateRoute","Component","component","auth","rest","userStatus","render","getItem","location","HomeProfile","setHome","homeId","useParams","url","api_cal","fetchHome","gridRow","border","description","backgroundColor","frameBorder","allowFullScreen","title","ResetPassword","setEmail","setMessage","setErrortMessage","sendEmail","e","preventDefault","then","backgorundColor","ResetPassScreen","newpassword","newPassword","setNewPassword","updated","setUpdated","error","setError","token","updatePassword","userInfo","resetResponse","textAlign","App","setAuth","parse","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fb9e41f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.15243493.png\";","module.exports = __webpack_public_path__ + \"static/media/av3.34c3ee90.png\";","import React from \"react\";\nimport Logo from \"../assets/logo2.png\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst Nav = (props) => {\n  const { userData, isAuth, onAuth } = props;\n  console.log(\"user data ...\", userData);\n  const handleLogout = async () => {\n    localStorage.removeItem(\"user\");\n    onAuth(false);\n    try {\n      await axios.get(\"http://localhost:9090/users/logout\");\n      return;\n    } catch (err) {\n      return;\n    }\n  };\n  return (\n    <div className=\"Nav\">\n      <div id=\"imgContainer\">\n        <img src={Logo} alt=\"logo\" />\n        {isAuth ? <p>Welcome {userData.firstname} </p> : null}\n      </div>\n      {isAuth ? (\n        <ul>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/inventory\">Inventory</Link>\n          <Link to=\"/profile\">Profile</Link>\n          <button id=\"logout\" onClick={handleLogout}>\n            Log out\n          </button>\n        </ul>\n      ) : (\n        <ul>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/inventory\">Inventory</Link>\n          <div id=\"signInUpContainer\">\n            <div className=\"signInUp\" id=\"signin\">\n              <Link to=\"/login\">Login</Link>\n            </div>\n            <div className=\"signInUp\" id=\"signup\">\n              <Link to=\"/signup\">Signup</Link>\n            </div>\n          </div>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst LandingPage = () => {\n  const [txtSearch, setTxtSearch] = useState(\"\");\n  const [notFoundMessage, setNotFoundMessage] = useState(false);\n  const [searchResultDisplay, setSearchResultDisplay] = useState(\"none\");\n  const [addresses, setAddresses] = useState([]);\n  const showSearchResults = () => {\n    setSearchResultDisplay(\"block\");\n  };\n  const hideSearchResults = () => {\n    setSearchResultDisplay(\"none\");\n  };\n  const getInputValue = (event) => {\n    setTxtSearch({\n      [event.target.id]: event.target.value,\n    });\n    console.log(event.target.value);\n  };\n  const API_URL = `https://realestate-da8f.restdb.io/rest/addresses?q={\"city\":\"${txtSearch.searchInput}\"}`;\n  const API_KEY = \"5ed0af472032862ff2ce2612\";\n  const searchByCity = async () => {\n    // console.log(txtSearch.searchInput);\n    const options = {\n      crossDomain: true,\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"x-apikey\": API_KEY,\n        \"cache-control\": \"no-cache\",\n      },\n    };\n    const fetchCity = await fetch(API_URL, options);\n    let result = await fetchCity.json();\n    console.log(result);\n    if (result.length === 0) {\n      setNotFoundMessage(true);\n    } else {\n      setNotFoundMessage(false);\n    }\n    setAddresses(result);\n    showSearchResults();\n  };\n\n  return (\n    <div id=\"landingPage\">\n      <div className=\"searchContainer\">\n        <h2>Looking for your dream house?</h2>\n        <div>\n          <form autoComplete=\"off\">\n            <div onClick={searchByCity} style={{ cursor: \"pointer\" }}>\n              <i className=\"fas fa-search\"></i>\n            </div>\n            <input\n              type=\"text\"\n              name=\"txtSearch\"\n              id=\"searchInput\"\n              placeholder=\"Search by City or Postal code\"\n              onChange={getInputValue}\n              onBlur={hideSearchResults}\n              autoFocus\n            />\n          </form>\n          <div id=\"searchResult\" style={{ display: searchResultDisplay }}>\n            {!notFoundMessage ? (\n              addresses.map((address) => {\n                return (\n                  <Link\n                    id=\"searchItem\"\n                    key={address._id}\n                    to={`/inventory/${address._id}`}\n                  >\n                    <p>\n                      {address.city} - Postal code:{address.postalcode}\n                    </p>\n                  </Link>\n                );\n              })\n            ) : (\n              <p id=\"notFound\">Nothing found</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\"; //form validation library\nconst Login = (props) => {\n  const [errorMessage, setErrorMessage] = useState();\n  const { onAuth, setUserData } = props;\n  const { register, handleSubmit, errors } = useForm(); // by invoking the \"register\" function , it registers your input into the hook\n  let history = useHistory();\n  let location = useLocation();\n\n  let { from } = location.state || { from: { pathname: \"/profile\" } };\n\n  const loginHandler = async (formData) => {\n    const options = {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await fetch(\"http://localhost:9090/users/login\", options);\n    const data = await res.json();\n    console.log(\"response in login....\", data);\n    if (data.status === 200) {\n      onAuth(true);\n      setUserData(data.response);\n      localStorage.setItem(\"user\", JSON.stringify(data.response));\n      // push to the page you came from to login\n      history.push(from);\n    }\n\n    setErrorMessage(data.message);\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <section className=\"formImage\"></section>\n      <div className=\"loginForm\">\n        {\" \"}\n        {errorMessage ? (\n          <div style={{ color: \"#bb0000\" }}>{errorMessage}</div>\n        ) : (\n          \"\"\n        )}\n        <h3>Login</h3>\n        <form onSubmit={handleSubmit(loginHandler)}>\n          <div>\n            <i className=\"far fa-envelope icon\"></i>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              ref={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                },\n              })}\n            />\n            {errors.email && <small>* Invalid email address </small>}\n          </div>\n          <div>\n            <i className=\"fa fa-lock icon\"></i>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              ref={register({\n                required: true,\n                pattern: {\n                  value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n                },\n              })}\n            />\n            {errors.password && (\n              <small>* Minimum 5 alpha numberic charecters </small>\n            )}\n          </div>\n          <div id=\"btnLinksContainer\">\n            <button className=\"submitButton\">Login</button>\n            <div className=\"links\">\n              <div>\n                <Link to=\"/resetpassword\" className=\"loginlinks\">\n                  Forgot password?\n                </Link>\n              </div>\n              <div>\n                <Link to=\"/signup\" className=\"loginlinks\">\n                  Don't have an account?\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n// import axios from \"axios\";\n\nconst Signup = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let history = useHistory();\n\n  const signupHandler = async (formData) => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const res = await fetch(\"http://localhost:9090/users/signup\", options);\n    const data = await res.json();\n    console.log(\"response....\", data);\n    setErrorMessage(data.message);\n    if (data.status !== 400) {\n      history.push(\"/login\");\n    }\n  };\n  return (\n    <div className=\"formContainer\">\n      <section className=\"formImage\"></section>\n      <div className=\"registerForm\">\n        <h2>Welcome to Dream House</h2>\n        {errorMessage ? (\n          <div style={{ color: \"#bb0000\" }}>{errorMessage}</div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={handleSubmit(signupHandler)}>\n          <div className=\"nameWrapper\">\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              placeholder=\"First name\"\n              ref={register({\n                required:\n                  \"* First name must be minimum 2 alphabetical charecters\",\n                minLength: 2,\n                pattern: { value: /^[a-zA-Z\\s]+$/ },\n              })}\n            />\n            {errors.name && (\n              <small className=\"err-msg\">{errors.name.message}</small>\n            )}\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              placeholder=\"Last name\"\n              ref={register({\n                required:\n                  \"* Last name must be minimum 2 alphabetical charecters\",\n                minLength: 2,\n                pattern: { value: /^[a-zA-Z\\s]+$/ },\n              })}\n            />\n            {errors.lastname && (\n              <small className=\"err-msg\">\n                Last name must be minimum 2 charecter{\" \"}\n              </small>\n            )}\n          </div>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n              },\n            })}\n          />\n          {errors.email && <small>* Invalid email address </small>}\n\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n              },\n            })}\n          />\n          {errors.password && (\n            <small>* Minimum 5 alpha numberic charecters </small>\n          )}\n          <input\n            type=\"password\"\n            name=\"repeatPassword\"\n            placeholder=\"Repeat Password\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n              },\n            })}\n          />\n          {errors.repeatPassword && (\n            <small>* Minimum 5 alpha numberic charecters </small>\n          )}\n\n          <button className=\"submitButton\">Signup</button>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Avatar2 from \"../assets/av3.png\";\nimport axios from \"axios\";\nconst Profile = (props) => {\n  let history = useHistory();\n  const { userData, onAuth, setUserData } = props;\n  const [displayUpdateMessage, setDisplayUpdateMessage] = useState(\"none\");\n  const [displayUpdateBtn, setDisplayUpdateBtn] = useState(false);\n  const [deleteMessage, setDeleteMessage] = useState(false);\n  const [form, setForm] = useState({\n    firstname: userData.firstname,\n    lastname: userData.lastname,\n    email: userData.email,\n  });\n  // Getting the values of the form\n  const handleChange = (input) => (event) => {\n    setForm({ ...form, [input]: event.target.value });\n    setDisplayUpdateBtn(true);\n    console.log(\"handlechange\", form);\n  };\n\n  // Update user info\n  const handleUpdate = async () => {\n    const updatedData = {\n      firstname: form.firstname,\n      lastname: form.lastname,\n      email: form.email,\n    };\n\n    try {\n      const response = await axios.put(\n        \"http://localhost:9090/users\",\n        updatedData\n      );\n      setUserData(updatedData);\n      console.log(response.data.response);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.response));\n      showUpdateModal();\n    } catch (err) {\n      console.log(\"error\", err);\n      setDisplayUpdateMessage(\"none\");\n    }\n  };\n  const showUpdateModal = () => {\n    console.log(\"hiiii\");\n    setDisplayUpdateMessage(\"grid\");\n  };\n\n  //Delete user profile\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\n        \"http://ec2-18-232-129-39.compute-1.amazonaws.com/users\"\n      );\n      onAuth(false);\n      localStorage.removeItem(\"user\");\n      history.push(\"/\");\n    } catch (err) {\n      console.log(\"Failed:\", err);\n    }\n  };\n  const hideUpdateModal = () => {\n    setDisplayUpdateMessage(\"none\");\n  };\n  const showDeleteMessage = () => {\n    setDeleteMessage(true);\n  };\n  const hideDeleteMessage = () => {\n    setDeleteMessage(false);\n  };\n  return (\n    <div className=\"profileContainer\">\n      <div className=\"MessageModal\" style={{ display: displayUpdateMessage }}>\n        <p id=\"successMessage\">\n          Your information has been updated successfully!\n        </p>\n        <button onClick={hideUpdateModal}>Ok</button>\n      </div>\n      <div\n        className=\"MessageModal\"\n        style={{ display: deleteMessage ? \"grid\" : \"none\" }}\n      >\n        <p style={{ color: \"#bb0000\" }}> Are you sure?</p>\n        <div id=\"warningContainer\">\n          <button onClick={handleDelete}>Yes</button>\n          <button onClick={hideDeleteMessage} style={{ marginLeft: \"1em\" }}>\n            Cancel\n          </button>\n        </div>\n      </div>\n      <div className=\"imgWrapper\">\n        <img src={Avatar2} id=\"avatar\" alt=\"\" />\n        <div className=\"resetBtn\" style={{ marginTop: \"1em\" }}>\n          {\" \"}\n          <Link to=\"resetpassword\">Change password</Link>{\" \"}\n        </div>\n      </div>\n      <div className=\"userInfo\">\n        <form className=\"userInfo\" autoComplete=\"off\">\n          <div className=\"detail\">\n            <span> Email Address:</span>\n            <input\n              className=\"profileInput\"\n              type=\"text\"\n              defaultValue={userData.email}\n              onChange={handleChange(\"email\")}\n            />\n          </div>\n          <div className=\"detail\" style={{ marginTop: \"2em\" }}>\n            <span> Full name: </span>\n            <div className=\"profileInput\" id=\"fullName\">\n              <input\n                type=\"text\"\n                name=\"\"\n                defaultValue={userData.firstname}\n                onChange={handleChange(\"firstname\")}\n              />\n              <input\n                type=\"text\"\n                name=\"\"\n                id=\"\"\n                defaultValue={userData.lastname}\n                onChange={handleChange(\"lastname\")}\n              />\n            </div>\n          </div>\n        </form>\n        <div className=\"profileBtns\">\n          <div\n            id=\"update\"\n            style={{\n              display: displayUpdateBtn ? \"block\" : \"none\",\n              marginRight: \"2em\",\n            }}\n          >\n            <button id=\"updateBtn\" onClick={handleUpdate}>\n              Save Updates\n            </button>\n          </div>\n\n          <div id=\"delete\">\n            <button id=\"deleteBtn\" onClick={showDeleteMessage}>\n              Delete profile\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Inventory = (props) => {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const API_URL = \"https://realestate-da8f.restdb.io/rest/addresses\";\n  const [homes, setHomes] = useState([]);\n  useEffect(() => {\n    async function fetchAllHomes() {\n      const options = {\n        crossDomain: true,\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-apikey\": API_KEY,\n          \"cache-control\": \"no-cache\",\n        },\n      };\n      const api_call = await fetch(API_URL, options);\n      const response = await api_call.json();\n      console.log(response);\n      setHomes(response);\n    }\n    fetchAllHomes();\n  }, [API_KEY]);\n\n  // console.log(API_KEY);\n  let homeLink = homes.map((home) => {\n    return (\n      <Link key={home._id} to={`/inventory/${home._id}`}>\n        <div id=\"home\">\n          <div\n            style={{\n              width: \"100%\",\n              height: \"25vh\",\n              backgroundImage: `url(https://realestate-da8f.restdb.io/media/${home.image})`, //`url(${imageUrl})`\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n            }}\n          ></div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"0 1em\",\n            }}\n          >\n            <h3>{home.price}DKK</h3>\n            <p>\n              {home.beds} | {home.bath} | {home.area}sqm\n            </p>\n          </div>\n          <div style={{ paddingLeft: \"1em\" }}>\n            {\" \"}\n            {home.city} | {home.street} | {home.postalcode}\n          </div>\n        </div>\n      </Link>\n    );\n  });\n\n  return (\n    <div id=\"homeContainer\">{homeLink ? homeLink : <h2>Loading ....</h2>} </div>\n  );\n};\nexport default Inventory;\n","import React, { useEffect } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n//component property defined on props\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  const history = useHistory();\n  console.log(\"rest\", rest);\n  // check if the user is already logged in\n  useEffect(() => {\n    const userStatus = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:9090/users/session\");\n        const userData = response.data;\n        if (!userData) {\n          console.log(\"not logged in\");\n        }\n        console.log(userData.data);\n        localStorage.setItem(\"user\", JSON.stringify(userData.data));\n      } catch (err) {\n        localStorage.removeItem(\"user\");\n        return;\n      }\n    };\n\n    userStatus();\n  }, [history]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true || localStorage.getItem(\"user\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst HomeProfile = () => {\n  const [home, setHome] = useState([]);\n  const { homeId } = useParams();\n  const API_URL = \"https://realestate-da8f.restdb.io/rest/addresses\";\n  const API_KEY = \"5ed0af472032862ff2ce2612\";\n  useEffect(() => {\n    async function fetchHome() {\n      const url = `${API_URL}/${homeId}`;\n      const api_cal = await fetch(url, {\n        crossDomain: true,\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-apikey\": API_KEY,\n          \"cache-control\": \"no-cache\",\n        },\n      });\n      const response = await api_cal.json();\n      setHome(response);\n      console.log(response);\n    }\n    fetchHome(); // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {home ? (\n        <div id=\"homeProfileContainer\">\n          <div id=\"imageWrapper\">\n            <div\n              style={{\n                width: \"100%\",\n                backgroundImage: `url(https://realestate-da8f.restdb.io/media/${home.image})`, //`url(${imageUrl})`\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                gridRow: \"1 / 5\",\n              }}\n            ></div>\n            <div id=\"takeTour\">\n              {\" \"}\n              Interested in this property?\n              <div\n                className=\"btn\"\n                style={{\n                  border: \"rgb(167, 166, 171) 1px solid\",\n                }}\n              >\n                Take a tour\n              </div>\n            </div>\n          </div>\n          <div id=\"homeInfo\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                padding: \"0 1em\",\n              }}\n            >\n              <h3>{home.price}DKK</h3>\n              <div style={{ paddingLeft: \"1em\" }}>\n                {\" \"}\n                {home.beds}bd | {home.bath}ba | {home.area}sqm\n              </div>\n            </div>\n            <div style={{ paddingLeft: \"1em\" }}>\n              {\" \"}\n              {home.city} | {home.street} | {home.postalcode}\n            </div>\n            <div id=\"description\">\n              <div></div>\n              <p>{home.description}</p>\n            </div>\n            <div id=\"btns\">\n              <div\n                className=\"btn\"\n                style={{\n                  border: \"#e8505b 1px solid\",\n                  color: \"#e8505b\",\n                }}\n              >\n                Take a tour\n              </div>\n              <div\n                className=\"btn\"\n                style={{\n                  marginLeft: \"1em\",\n                  backgroundColor: \"#e8505b\",\n                  color: \"white\",\n                }}\n              >\n                Contact agent\n              </div>\n            </div>\n            <hr />\n            <div>\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3002.6133721334145!2d-73.14261198505395!3d41.18659927928308!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e80c540ed85383%3A0x1f19914bf8341e26!2s1574+Stratford+Ave%2C+Stratford%2C+CT+06615%2C+USA!5e0!3m2!1sen!2sdk!4v1559070448677!5m2!1sen!2sdk\"\n                width=\"100%\"\n                height=\"300\"\n                frameBorder=\"0\"\n                allowFullScreen\n                title=\"AdressMap\"\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading....</h2>\n      )}\n    </>\n  );\n};\nexport default HomeProfile;\n","import React, { useState } from \"react\";\nconst ResetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(false);\n  const [errorMessage, setErrortMessage] = useState(false);\n  const handleChange = (e) => {\n    setEmail({\n      [e.target.id]: e.target.value, // we use [] to refer to dynamic key name\n    });\n    console.log(e.target.value);\n  };\n  const sendEmail = async (e) => {\n    e.preventDefault();\n    if ({ email } === \"\") {\n      console.log(\"email empty\");\n    } else {\n      try {\n        await fetch(\n          \"http://ec2-18-232-129-39.compute-1.amazonaws.com/resetpassword\",\n          {\n            method: \"post\",\n            body: JSON.stringify(email),\n            credentials: \"include\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then((res) => res.json())\n          .then((data) => {\n            console.log(\"here\", data.message);\n            if (data.message === \"Recovery email sent\") {\n              setMessage(true);\n            }\n            if (data.message === \"Email is not in DB\") {\n              setErrortMessage(true);\n            }\n          });\n      } catch (err) {\n        if (err) {\n          console.log(\"error is:\", err);\n          return;\n        }\n        console.log(\"ok\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <section className=\"resetFormImage\"></section>\n\n      {!message ? (\n        <div className=\"resetForm\">\n          <h3 className=\"title\">Reset password</h3>\n          <form onSubmit={sendEmail} autoComplete=\"off\">\n            <i className=\"far fa-envelope icon\"></i>\n\n            <input\n              type=\"email\"\n              name=\"\"\n              id=\"email\"\n              placeholder=\"Enter your email address\"\n              onChange={handleChange}\n              style={{ paddingLeft: \"3em\" }}\n            />\n\n            <button className=\"submitButton\" type=\"submit\">\n              Send email to reset password{\" \"}\n            </button>\n          </form>\n          {errorMessage ? (\n            <h3 style={{ color: \"#bb0000\" }}>Email is not correct.Try again</h3>\n          ) : null}\n        </div>\n      ) : (\n        <div\n          className=\"successMessage\"\n          style={{ backgorundColor: \"rgba(0,0,0,.6)\" }}\n        >\n          <h2>\n            {\" \"}\n            Please check your email and follow the link to reset your password\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nconst ResetPassScreen = (props) => {\n  const [newPassword, setNewPassword] = useState({ newpassword: \"\" });\n  const [updated, setUpdated] = useState(false);\n  const [error, setError] = useState(false);\n  let { token } = useParams();\n  const { userData } = props;\n  console.log(\"thisss\", userData.id);\n  useEffect(() => {\n    try {\n      fetch(`http://52.202.183.85/reset?resetpasswordtoken=${token}`, {})\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"here\", data.response);\n          if (data.response.message === \"password reset link a-ok\") {\n            setUpdated(false);\n            setError(false);\n          }\n        });\n    } catch (error) {\n      console.log(\"erro in catch\", error);\n      setUpdated(false);\n      setError(true);\n    }\n  }, [token]);\n\n  const handleChange = (e) => {\n    setNewPassword({\n      [e.target.id]: e.target.value,\n    });\n    console.log(newPassword);\n  };\n  const updatePassword = async (e) => {\n    e.preventDefault();\n    const userInfo = {\n      id: userData.id,\n      newPassword: newPassword.newpassword,\n      token,\n    };\n    console.log(userInfo);\n    try {\n      const resetResponse = await axios.put(\n        \"http://localhost:9090/updatePasswordViaEmail\",\n        {\n          userInfo,\n        }\n      );\n      console.log(resetResponse);\n      if (resetResponse.data.message === \"password updated\") {\n        setError(false);\n        setUpdated(true);\n        // handleLogout();\n        // handleUserStatus();\n      } else {\n        setError(true);\n        setUpdated(false);\n      }\n    } catch {\n      console.log(error);\n    }\n  };\n\n  //   const handleLogout = async () => {\n  //     localStorage.removeItem(\"user\");\n  //     onAuth(false);\n  //     try {\n  //       await axios.get(\"http://localhost:9090/users/logout\");\n  //       return;\n  //     } catch (err) {\n  //       return;\n  //     }\n  //   };\n\n  if (error) {\n    return (\n      <div>\n        <div>\n          <h4>Problem resetting password. Please send another reset link.</h4>\n          <Link to=\"/\"> Home page</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"passwordScreenContainer\">\n      {!updated ? (\n        <div className=\"resetForm\">\n          <h2 style={{ textAlign: \"center\" }}>Reset your password</h2>\n\n          <form onSubmit={updatePassword}>\n            <i className=\"fa fa-lock icon\"></i>\n\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"newpassword\"\n              placeholder=\"Type your new password\"\n              onChange={handleChange}\n            />\n            <button\n              className=\"submitButton\"\n              style={{ width: \"100%\" }}\n              type=\"submit\"\n            >\n              Reset password\n            </button>\n          </form>\n        </div>\n      ) : null}\n\n      {updated && (\n        <div className=\"successMessage\">\n          <h2 style={{ marginTop: \"3em\" }}>\n            Your password has been successfully reset, please try logging in\n            again.\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ResetPassScreen;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport NavBar from \"./components/Nav\";\nimport LandingPage from \"./sections/LandingPage\";\nimport Login from \"./sections/Login\";\nimport Signup from \"./sections/Signup\";\nimport Profile from \"./sections/Profile\";\nimport Inventory from \"./sections/Inventory\";\nimport PrivateRoute from \"./components/ProtectedRout\";\nimport HomeProfile from \"./sections/HomeProfile\";\nimport ResetPassword from \"./sections/ResetPassword\";\nimport ResetPasswordFinalScreen from \"./sections/ScreenForResetPassword\";\nimport \"./App.css\";\n\nfunction App() {\n  const [auth, setAuth] = useState(localStorage.getItem(\"user\") ? true : false);\n\n  const [userData, setUserData] = useState(\n    localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : \"\"\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar userData={userData} isAuth={auth} onAuth={setAuth} />\n\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route\n            exact\n            path=\"/login\"\n            component={(props) => (\n              <Login {...props} onAuth={setAuth} setUserData={setUserData} />\n            )}\n          ></Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>{\" \"}\n          <PrivateRoute\n            auth={auth}\n            exact\n            path=\"/profile\"\n            component={(props) => (\n              <Profile\n                userData={userData}\n                setUserData={setUserData}\n                onAuth={setAuth}\n                {...props}\n              />\n            )}\n          />\n          <PrivateRoute\n            auth={auth}\n            exact\n            path=\"/inventory\"\n            component={(props) => <Inventory {...props} />}\n          />\n          <PrivateRoute\n            exact\n            path=\"/inventory/:homeId\"\n            component={HomeProfile}\n          />\n          <Route exact path=\"/resetpassword\" component={ResetPassword} />\n          <Route\n            exact\n            path=\"/reset/:token\"\n            component={(props) => (\n              <ResetPasswordFinalScreen\n                userData={userData}\n                onAuth={setAuth}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}